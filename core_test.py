actual_grid = [
    [' ', ' ', ' ', 'h', 'y', 'p', 'e', 'r', 't', 'u', 'n', 'i', 'n', 'g', ' '], 
    [' ', ' ', ' ', ' ', 'p', 'r', 'o', 'g', 'r', 'a', 'm', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', 'd', ' ', 'c', 'o', 'd', 'e', 'e', 'e', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', 'e', ' ', ' ', ' ', ' ', ' ', 'a', ' ', ' ', 'o', ' ', ' '], 
    [' ', ' ', ' ', 'b', 'b', ' ', ' ', ' ', ' ', 'l', ' ', ' ', 'v', ' ', ' '], 
    [' ', 'j', ' ', 'u', 'i', ' ', 'j', ' ', ' ', 'g', ' ', ' ', 'e', ' ', ' '], 
    [' ', 'a', ' ', 'g', 'n', ' ', 'a', ' ', ' ', 'o', ' ', 'h', 'r', 'p', ' '], 
    [' ', 'v', ' ', ' ', 'a', ' ', 'v', ' ', ' ', 'r', ' ', 't', 'f', 'y', ' '], 
    ['c', 'a', ' ', ' ', 'r', ' ', 'a', ' ', ' ', 'i', ' ', 'm', 'i', 't', ' '], 
    ['s', ' ', ' ', ' ', 'y', ' ', 's', ' ', ' ', 't', ' ', 'l', 't', 'h', ' '], 
    ['s', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', 'h', ' ', ' ', 't', 'o', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', 'r', ' ', ' ', 'm', ' ', ' ', 'i', 'n', 'r'], 
    [' ', ' ', ' ', ' ', ' ', ' ', 'i', ' ', ' ', ' ', ' ', ' ', 'n', ' ', 'u'], 
    [' ', ' ', ' ', ' ', ' ', ' ', 'p', ' ', ' ', ' ', ' ', ' ', 'g', ' ', 'b'], 
    [' ', ' ', ' ', ' ', ' ', ' ', 't', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'y']]


current_grid = [
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', 'D', ' ', 'c', 'o', 'd', 'e', 'e', 'e', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', '', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']]


current_grid_SIZE = 15

score_grid = [[' ' for _ in range(current_grid_SIZE)] for _ in range(current_grid_SIZE)]


current_pos = [2, 12]

def check_word(current, horizontal):
    first_flag = False
    if not first_flag:
        if actual_grid[current[0]][current[1]] == ' ':
            first_flag = True
            current[1] -= 1
        given_word = ""
        actual_word = ""
        for i in range(current[1], -1, -1):
            if actual_grid[current[0]][i] != ' ':
                given_word += current_grid[current[0]][i]
                actual_word += actual_grid[current[0]][i]
            else:
                break
        print(given_word + actual_word)
        return given_word == actual_word, len(actual_word)

def score(current, size, horizontal):
    if horizontal:
            score_grid[current[0]][current[1]-size:current[1]] = ['g'] * size
    
    print(score_grid)



correct, size = check_word(current_pos, horizontal=True)

if correct:
    print(score(current_pos, size, horizontal=True))